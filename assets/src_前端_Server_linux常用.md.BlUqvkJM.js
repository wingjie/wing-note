import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.Dpoz9nJ7.js";const p="/assets/server-03_linux%E5%B8%B8%E7%94%A8-02.B_a_Pmgd.png",h="/assets/server-03_linux%E5%B8%B8%E7%94%A8-03.fg-7OZft.png",t="/assets/server-03_linux%E5%B8%B8%E7%94%A8-04.mwlj5K5o.png",y=JSON.parse('{"title":"linux常用","description":"","frontmatter":{},"headers":[],"relativePath":"src/前端/Server/linux常用.md","filePath":"src/前端/Server/linux常用.md","lastUpdated":1710326451000}'),e={name:"src/前端/Server/linux常用.md"};function k(d,s,r,F,c,o){return n(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="linux常用" tabindex="-1">linux常用 <a class="header-anchor" href="#linux常用" aria-label="Permalink to &quot;linux常用&quot;">​</a></h1><h2 id="基本操作" tabindex="-1">基本操作 <a class="header-anchor" href="#基本操作" aria-label="Permalink to &quot;基本操作&quot;">​</a></h2><ul><li>清空当前屏幕：<code>clear</code></li><li>直到多少秒：<code>sleep 60</code></li><li>查看历史命令：<code>history</code>， <ul><li>使用<code>!n</code>执行第n条命令，</li><li><code>!!</code>执行上一条命令</li><li><code>!字串</code> 执行上一条该字串开头的命令</li></ul></li></ul><h2 id="linux修改中文系统" tabindex="-1">linux修改中文系统 <a class="header-anchor" href="#linux修改中文系统" aria-label="Permalink to &quot;linux修改中文系统&quot;">​</a></h2><ol><li><p>locale -a查看是否有zh_CN.UTF-8，如果有则进行下一步，没有自行百度安装</p></li><li><p>使用<code>vim</code>打开<code>locale.conf</code>文件</p><p><code>vim /etc/locale.conf</code></p></li><li><p>编辑文件后保存退出</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LANG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;zh_CN.UTF-8&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # en_US.UTF-8为英文</span></span></code></pre></div></li><li><p>最后重启 <code>reboot</code></p></li></ol><h2 id="安装docker并部署nginx" tabindex="-1">安装docker并部署nginx <a class="header-anchor" href="#安装docker并部署nginx" aria-label="Permalink to &quot;安装docker并部署nginx&quot;">​</a></h2><p>使用docker部署nginx的好处：nginx可以随便创建，不用担心配置出错</p><h3 id="安装docker" tabindex="-1">安装docker <a class="header-anchor" href="#安装docker" aria-label="Permalink to &quot;安装docker&quot;">​</a></h3><ol><li><p>修改镜像源为阿里源：<code>vim /etc/apt/sources.list</code></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://mirrors.aliyun.com/ubuntu/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bionic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restricted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> universe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multiverse</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://mirrors.aliyun.com/ubuntu/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bionic-security</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restricted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> universe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multiverse</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://mirrors.aliyun.com/ubuntu/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bionic-updates</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restricted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> universe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multiverse</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://mirrors.aliyun.com/ubuntu/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bionic-proposed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restricted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> universe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multiverse</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://mirrors.aliyun.com/ubuntu/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bionic-backports</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restricted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> universe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multiverse</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deb-src</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://mirrors.aliyun.com/ubuntu/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bionic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restricted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> universe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multiverse</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deb-src</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://mirrors.aliyun.com/ubuntu/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bionic-security</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restricted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> universe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multiverse</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deb-src</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://mirrors.aliyun.com/ubuntu/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bionic-updates</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restricted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> universe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multiverse</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deb-src</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://mirrors.aliyun.com/ubuntu/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bionic-proposed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restricted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> universe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multiverse</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deb-src</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://mirrors.aliyun.com/ubuntu/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bionic-backports</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restricted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> universe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multiverse</span></span></code></pre></div></li><li><p>更新软件索引：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span></code></pre></div></li><li><p>安装依赖</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-transport-https</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ca-certificates</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> software-properties-common</span></span></code></pre></div></li><li><p>安装GPG证书</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span></span></code></pre></div></li><li><p>添加docker软件信息</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add-apt-repository</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lsb_release</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -cs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">) stable&quot;</span></span></code></pre></div></li><li><p>更新并安装docker-ce</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-ce</span></span></code></pre></div></li><li><p>检测安装是否成功：<code>docker version</code></p></li></ol><h3 id="部署nginx" tabindex="-1">部署nginx <a class="header-anchor" href="#部署nginx" aria-label="Permalink to &quot;部署nginx&quot;">​</a></h3><ol><li><p>下载镜像：<code>docker pull nginx</code></p></li><li><p>查看本地镜像：<code>docker images</code></p></li><li><p>运行镜像并复制默认文件</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mynginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建主机挂载配置文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/docker-nginx/{conf,conf.d,html,logs}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 复制默认配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mynginx:/etc/nginx/nginx.conf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/docker-nginx/conf/nginx.conf</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mynginx:/etc/nginx/conf.d/default.conf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/docker-nginx/conf.d/default.conf</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mynginx:/usr/share/nginx/html/index.html</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/docker-nginx/html/index.html</span></span></code></pre></div><ul><li>usr/share/nginx/html/index.html 默认的入口文件，html文件可以放到html这个目录；</li><li>logs 查看日志的文件，以后nginx错误日志可以直接在这里查看</li><li>conf.d 配置conf文件的地方</li></ul></li><li><p>停止删除容器：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mynginx</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mynginx</span></span></code></pre></div></li><li><p>生成启动文件，记得首先切换到docker-nginx目录（复制配置的目录）</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start.sh</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">NGINX_DIR=\`</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">docker stop mynginx</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">docker rm mynginx</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">docker run -d </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    --restart always </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    -p 80:80 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    --name mynginx </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    -v </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{NGINX_DIR}/html:/usr/share/nginx/html </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    -v </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{NGINX_DIR}/conf/nginx.conf:/etc/nginx/nginx.conf </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    -v </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{NGINX_DIR}/conf.d:/etc/nginx/conf.d </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    -v </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{NGINX_DIR}/logs:/var/log/nginx </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    nginx</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span></code></pre></div><p>如果需要映射其他文件，可以直接在-v后面添加参数即可</p><ul><li><code>-d</code> 后台运行容器</li><li><code>--name</code> 指定容器名</li><li><code>-p </code> 指定服务运行端口</li><li><code>-v</code> 映射目录或文件</li></ul></li><li><p>启动nginx：<code>sh start.sh</code></p></li></ol><h2 id="docker-compose" tabindex="-1">docker-compose <a class="header-anchor" href="#docker-compose" aria-label="Permalink to &quot;docker-compose&quot;">​</a></h2><p>参考文章：<a href="https://blog.csdn.net/pushiqiang/article/details/78682323" target="_blank" rel="noreferrer">docker-compose教程（安装，使用, 快速入门）</a></p><ol><li><p>安装</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose</span></span></code></pre></div></li><li><p>创建docker-compose.yml文件</p><p>yml和yaml扩展名都正常工作</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;3&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  nginx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # docker名字</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hnginx</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 使用的镜像, 可以从docker hub查找</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 重启策略</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">always</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 指定开放端口</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      #本地80端口 映射到nginx镜像80端口</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">80:80</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">443:443</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 指定文件映射规则</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/root/docker-nginx/html:/usr/share/nginx/html</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/root/docker-nginx/conf/nginx.conf:/etc/nginx/nginx.conf</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/root/docker-nginx/conf.d:/etc/nginx/conf.d</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/root/docker-nginx/logs:/var/log/nginx</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/root/docker-nginx/ssl:/etc/nginx/crt</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/localtime:/etc/localtime:ro</span></span></code></pre></div></li><li><p>docker-compose命令</p><ul><li><code>docker-compose up</code> 前台运行 <ul><li><code>-f</code> 指定文件</li><li><code>-d</code> 后台运行</li></ul></li></ul></li></ol><h2 id="docker常用命令" tabindex="-1">docker常用命令 <a class="header-anchor" href="#docker常用命令" aria-label="Permalink to &quot;docker常用命令&quot;">​</a></h2><p>镜像搜索地址 <a href="https://hub.docker.com/" target="_blank" rel="noreferrer">https://hub.docker.com/</a></p><ul><li><code>docker ps</code> 查看docker容器列表</li><li><code>docker-compose up -d jenkins</code> 更新jenkins的配置</li><li><code>docker images</code> 查看本地镜像</li><li><code>docker logs data_nginx_1</code> 查看镜像日志</li><li><code>docker restart data_nginx_1</code> 重启docker</li><li><code>docker exec -it hnginx bash</code> 进入nginx镜像</li></ul><h2 id="ranger" tabindex="-1">ranger <a class="header-anchor" href="#ranger" aria-label="Permalink to &quot;ranger&quot;">​</a></h2><blockquote><p>ranger 一个文件管理器，终端最好用的文件管理器，可以直接进github了解</p><p>github：<a href="https://github.com/ranger/ranger" target="_blank" rel="noreferrer">https://github.com/ranger/ranger</a></p></blockquote><h3 id="安装ranger" tabindex="-1">安装ranger <a class="header-anchor" href="#安装ranger" aria-label="Permalink to &quot;安装ranger&quot;">​</a></h3><ol><li><p>更新存储库：<code>sudo apt-get update -y</code></p></li><li><p>安装make：<code>sudo apt-get install make</code></p></li><li><p>下载ranger资源库：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/hut/ranger.git</span></span></code></pre></div></li><li><p>安装ranger，安装之后直接运行<code>ranger</code>即可查看</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ranger</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ranger</span></span></code></pre></div></li><li><p>复制ranger配置文件</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ranger</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --copy-config=all</span></span></code></pre></div><p>复制之后去<code>~/.config/ranger</code>查看即可</p></li></ol><h3 id="ranger快捷键" tabindex="-1">ranger快捷键 <a class="header-anchor" href="#ranger快捷键" aria-label="Permalink to &quot;ranger快捷键&quot;">​</a></h3><ul><li><p>ranger操作</p><ul><li>q 退出</li><li>shift + s 进入当前目录(会退出当前ranger)</li><li>zh 显示隐藏文件</li><li>zp 打开文件预览</li><li>zP 打开目录预览</li></ul></li><li><p>文件操作</p><ul><li>cw 重命名文件</li><li>A 在当前名称基础上重命名</li><li>yy 复制文件</li><li>dd 剪切文件</li><li>pp 粘贴文件</li><li>dD 删除文件</li></ul></li><li><p>文件选择</p><ul><li>space 多选</li><li>v 反选/全选</li><li>/ 搜索(tab切换下一个)</li><li>du 显示大小</li></ul></li><li><p>书签</p><ul><li>m 新建书签 (按下之后随便按一个键保留当前书签名字)</li><li>\` 打开书签</li><li>um 删除书签 (之后按书签名字即可)</li></ul></li><li><p>标签</p><ul><li>gn / ctrl + n 新建标签</li><li>tab 切换标签</li><li>gc 关闭标签</li></ul></li><li><p>文件排序</p><ul><li>on 根据文件名</li><li>oc 根据改变时间</li><li>os 根据文件大小</li><li>ot 根据后缀名</li><li>oa 根据访问时间</li><li>om 根据修改进行排序</li></ul></li></ul><h2 id="本地直接连接linux" tabindex="-1">本地直接连接linux <a class="header-anchor" href="#本地直接连接linux" aria-label="Permalink to &quot;本地直接连接linux&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@39.107.82.176</span></span></code></pre></div><h2 id="使用xshell上传网站" tabindex="-1">使用xshell上传网站 <a class="header-anchor" href="#使用xshell上传网站" aria-label="Permalink to &quot;使用xshell上传网站&quot;">​</a></h2><ol><li>安装：<code>yum install lrzsz -y</code></li><li>检查安装是否完成：<code>rpm -qa | grep lrzsz</code></li><li>基本操作：</li></ol><ul><li>上传：<code>rz</code> 直接弹出上传窗口</li><li>下载：<code>sz</code> 直接弹出下载窗口</li></ul><h2 id="本地cmd直接操作文件上传" tabindex="-1">本地cmd直接操作文件上传 <a class="header-anchor" href="#本地cmd直接操作文件上传" aria-label="Permalink to &quot;本地cmd直接操作文件上传&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 下载文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build.gz</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@107.172.27.254:/home/test.txt</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 上传文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.txt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@107.172.27.254:/home</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 下载目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dist</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@107.172.27.254:/home/test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 上传目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dist</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@107.172.27.254:/home</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 上传当前目录所有文件和目录到远程</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@39.107.82.176:/home</span></span></code></pre></div><h2 id="本地直接打包加上传" tabindex="-1">本地直接打包加上传 <a class="header-anchor" href="#本地直接打包加上传" aria-label="Permalink to &quot;本地直接打包加上传&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 切换到build目录里</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -cvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build.gz</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 上传到www/wwwroot/chart目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build.gz</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@39.107.82.176:/www/wwwroot/chart</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 连接到linux,并输入密码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@39.107.82.176</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#  服务器的操作</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 切换到www/wwwroot/chart目录</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /www/wwwroot/chart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 解压</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -xvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build.gz</span></span></code></pre></div><h2 id="解决scp不需要输入密码直接上传" tabindex="-1">解决scp不需要输入密码直接上传 <a class="header-anchor" href="#解决scp不需要输入密码直接上传" aria-label="Permalink to &quot;解决scp不需要输入密码直接上传&quot;">​</a></h2><ol><li>在linux输入</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /root/.ssh</span></span></code></pre></div><ol start="2"><li>在本地执行以下命令，并一路回车创建ssh密钥</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa</span></span></code></pre></div><p>之后到<code>C:\\Users\\Administrator\\.ssh</code>，输入以下命令，复制到你的ssh目录下</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> id_rsa.pub</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@39.107.82.176:/root/.ssh</span></span></code></pre></div><ol start="3"><li>文件上传之后到linux输入命令</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /root/.ssh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> id_rsa.pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> authorized_keys</span></span></code></pre></div><ol start="4"><li>已经可以测试不输入密码直接上传了</li></ol><h2 id="填写脚本自动上传" tabindex="-1">填写脚本自动上传 <a class="header-anchor" href="#填写脚本自动上传" aria-label="Permalink to &quot;填写脚本自动上传&quot;">​</a></h2><ol><li>本地脚本，在项目根目录创建文件夹delony.sh，只要是sh后缀都行</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -cvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build.gz</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build.gz</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@39.107.82.176:/www/wwwroot/chart</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@39.107.82.176</span></span></code></pre></div><ol start="2"><li>运行之后会直接到服务器</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> delony.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 777</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> delony.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> delony.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 写入以下代码</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /www/wwwroot/chart</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -xvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build.gz</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build.gz</span></span></code></pre></div><ol start="3"><li>之后点击一下delony.sh，之后在到服务器运行：sh ./delony.sh即可</li></ol><h2 id="node项目保持后台运行" tabindex="-1">node项目保持后台运行 <a class="header-anchor" href="#node项目保持后台运行" aria-label="Permalink to &quot;node项目保持后台运行&quot;">​</a></h2><h3 id="pm2" tabindex="-1">pm2 <a class="header-anchor" href="#pm2" aria-label="Permalink to &quot;pm2&quot;">​</a></h3><p>文档：<a href="https://pm2.keymetrics.io/docs/usage/quick-start/" target="_blank" rel="noreferrer">https://pm2.keymetrics.io/docs/usage/quick-start/</a></p><ol><li><p>全局安装：<code>npm install pm2@latest -g</code></p></li><li><p>基本命令：</p><ul><li>启动：<code>pm2 start app.js</code></li><li>重启：<code>pm2 restart app_name</code></li><li>停止：<code>pm2 stop app_name</code></li><li>删除：<code>pm2 delete app_name</code></li><li>应用列表：<code>pm2 [list|ls|status]</code></li><li>查看日志：<code>pm2 logs</code></li><li>清空所有日志文件：<code>pm2 flush</code></li><li>查看实时仪表板：<code>pm2 monit</code></li><li>web界面查看仪表板：<code>pm2 plus</code> 推荐使用</li></ul></li><li><p>pm2 支持的一些参数</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定app_name, pm2一般通过app_name管理应用</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">app_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 往script脚本传递参数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arg1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arg2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arg3</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 文件改变自动重启</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--watch</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 忽略文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--watch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --ignore-watch=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;node_modules&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定日志文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">log_pat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 日志以时间为前缀, 默认日志不带前缀</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--time</span></span></code></pre></div><p>常用参数：<code> pm2 start app.js --time --name myService -- -p 8866</code></p><p>在启动时建议直接指定appName，下次启动即可直接输入app_name启动</p></li><li><p>创建生态系统文件配置，下次直接启动文件可同时启动多个node应用</p><p>命令：<code>pm2 ecosystem</code></p><p>执行之后会生成<code>ecosystem.config.js</code>文件：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">module.exports</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  apps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;app&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    script:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./app.js&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    env:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      NODE_ENV:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;development&quot;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    env_production:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      NODE_ENV:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;production&quot;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;worker&#39;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     script:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;worker.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>启动时：<code>pm2 start ecosystem.config.js</code></p></li></ol><h3 id="forever" tabindex="-1">forever <a class="header-anchor" href="#forever" aria-label="Permalink to &quot;forever&quot;">​</a></h3><p>forever也是一种保持后台运行的插件，建议使用pm2就可以了，监听更方便</p><ol><li><p>全局安装：<code>npm install forever -g</code></p></li><li><p>启动某个项目：forever start 文件名</p><p><img src="`+p+'" alt="image"></p></li><li><p>查看后台运行的项目：forever list</p><p><img src="'+h+'" alt="image"></p></li><li><p>停止某个项目：forever stop [pid]</p><p><img src="'+t+`" alt="image"></p></li><li><p>停止所有项目：forever stopall</p></li><li><p>重新启动项目：forever restart 文件名（重新启动不需要再传入参数了）</p></li><li><p>查看日志：forever logs</p></li></ol><h3 id="screen" tabindex="-1">screen <a class="header-anchor" href="#screen" aria-label="Permalink to &quot;screen&quot;">​</a></h3><p>screen是用来开一个新的窗口，可以退出后台，退出后台：ctrl + A，然后按D</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#创建</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">screen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> abc</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#恢复</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">screen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> abc</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#查看有多少会话：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">screen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ls</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#如果不能恢复：先</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">screen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> ###</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#再</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">screen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> ###</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#删除 </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">screen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> ### -X quit</span></span></code></pre></div><h2 id="nohup后台运行sh程序及查看" tabindex="-1">nohup后台运行sh程序及查看 <a class="header-anchor" href="#nohup后台运行sh程序及查看" aria-label="Permalink to &quot;nohup后台运行sh程序及查看&quot;">​</a></h2><ol><li><p>后台执行.sh文件（使用nohup和&amp;命令）</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nohup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./a.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span></span></code></pre></div><ul><li>nohup：加在一个命令的最前面，表示不挂断的运行命令</li><li>&amp;：加在一个命令的最后面，表示这个命令放在后台运行；</li></ul><p>执行之后会增加一个<code>nohup.out</code>文件查看执行日志</p><p>注意：在执行该.sh文件出错时，建议可以先手动运行一下sh文件有没有错误</p></li><li><p>查看后台运行的命令（使用ps和jobs）</p><ul><li><p><code>jobs</code>：只能查看当前终端后台执行的任务，换了终端就看不见了</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[1]- 运行中        nohup ./one.sh &amp;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[2]</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 运行中</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        nohup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./a.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span></span></code></pre></div><p><code>-</code> 表示之前的任务，<code>+</code>表示最近的任务，<code>[1]</code>代表jobnum是1；</p></li><li><p><code>ps</code>：可以查看别的终端的任务</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@wing test]ps -aux </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a.sh</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 将a.sh的任务过滤出来</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     15208</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 113176</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1404</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pts/1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    16:02</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   0:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /bin/bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./one.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     16413</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0.2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 151752</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  5356</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pts/1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    S+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   16:11</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   0:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> one.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     19902</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 112724</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1000</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pts/5</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    R+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   16:31</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   0:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --color=auto</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> one.sh</span></span></code></pre></div><p>参数：<code>a</code> 显示所有程序 <code>u</code> 以用户为主的格式显示 <code>x</code> 显示所有的程序，不以终端机来区分</p><p>第二列为PID；</p></li></ul></li><li><p>关闭当前后台运行的程序（使用kill）</p><p>（1）通过jobs命令查看jobnum，然后执行<code>kill jobnum</code></p><p>（2）通过ps命令查看进程号PID，然后执行<code>kill PID</code></p><p>（3）当前的前台的进程按<code>ctrl+c</code>就可以终止了</p></li><li><p>前后台进程的切换与控制</p><p>（1）<code>fg</code>命令</p><p>将后台中的命令调至前台继续运行；</p><p>如果后台有多个命令，可以使用jobs查看Jobnum，然后使用fg %jobnum将选中的命令调出；</p><p>（2）<code>ctrl + z</code>命令</p><p>将一个正在前台执行的命令放到后台，并且处于暂停状态</p><p>（3）<code>bg</code> 命令</p><p>将一个在后台暂停的命令，变成在后台继续执行；</p><p>如果多个命令使用jobs查看，之后bg %jobnum；</p></li></ol><h2 id="ubuntu下使用nvm" tabindex="-1">ubuntu下使用nvm <a class="header-anchor" href="#ubuntu下使用nvm" aria-label="Permalink to &quot;ubuntu下使用nvm&quot;">​</a></h2><ol><li><p>从github克隆过来</p><p>需要先创建~/git目录，之后将git的东西放在里面；还需要<code>apt install git</code>；</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/creationix/nvm.git</span></span></code></pre></div></li><li><p>配置终端启动时自动执行 source ~/git/nvm/nvm.sh,</p><p>在 ~/.bashrc, ~/.bash_profile, ~/.profile, 或者 ~/.zshrc 文件添加以下命令:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/git/nvm/nvm.sh</span></span></code></pre></div></li><li><p>重新打开</p></li><li><p>配置nvm环境变量</p><p>添加到上面一样的文件里面</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># nvm</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NVM_NODEJS_ORG_MIRROR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">https://npm.taobao.org/mirrors/node</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/git/nvm/nvm.sh</span></span></code></pre></div></li><li><p>之后就可以使用nvm来安装各版本的node了</p></li></ol><h2 id="jenkins常用命令" tabindex="-1">jenkins常用命令 <a class="header-anchor" href="#jenkins常用命令" aria-label="Permalink to &quot;jenkins常用命令&quot;">​</a></h2><p><strong>jenkins目录</strong></p><p>jenkins安装目录：/var/lib/jenkins</p><p>jenkins日志目录：/var/log/jenkins/jenkins.log</p><p>jenkins默认配置：/etc/default/jenkins</p><p>jenkins默认工作区：/var/lib/jenkins/workspace/</p><p><strong>jenkins常用命令</strong></p><ul><li>启动：<code>service jenkins start</code></li><li>重启：<code>service jenkins restart</code></li><li>停止：<code>service jenkins stop</code></li><li>启动之后检查jenkins：<code>ps -def | grep java</code></li></ul><p><strong>浏览器进入jenkins</strong></p><ul><li>登录：localhost:8080</li><li>关闭：localhost:8080/exit</li><li>重启：localhost:8080/restart</li><li>重新加载配置：localhost:8080/reload</li></ul><h2 id="部署在线版vscode" tabindex="-1">部署在线版VScode <a class="header-anchor" href="#部署在线版vscode" aria-label="Permalink to &quot;部署在线版VScode&quot;">​</a></h2><p>参考链接：<a href="https://blog.csdn.net/rjszz1314/article/details/125171514" target="_blank" rel="noreferrer">Linux安装code-server服务并使用systemctl管理</a></p><p><code>code-server</code>官网链接：<a href="https://github.com/cdr/code-server/releases" target="_blank" rel="noreferrer">https://github.com/cdr/code-server/releases</a></p><p>查看架构方便下载</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># x86_64选amd64</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uname</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span></span></code></pre></div><ol><li><p><strong>下载之后进行解压</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 解压</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -zxvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> code-server.....</span></span></code></pre></div></li><li><p><strong>添加配置文件</strong></p><p><code>~/.config/code-server/config.yaml</code></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bind-addr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0.0.0.0:8002</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">auth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">password</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123456</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre></div><p>密码和端口号可以修改，其他不要动</p></li><li><p><strong>启动</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入目录</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> code-server....</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 直接运行, 不会保留后台</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./code-server</span></span></code></pre></div></li><li><p><strong>使用systemctl管理</strong></p><p>新建<code>code-server.service</code> ，并复制到 <code>/etc/systemd/system/</code></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Description</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">code-server</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">After</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">network.target</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">exec</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ExecStart</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${code-server目录}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/code-server</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Restart</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">always</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">User</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${配置文件所在目录所属用户}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WantedBy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">default.target</span></span></code></pre></div></li><li><p><strong>启动方式</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#启动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> code-server</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#停止</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> code-server</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#开机自启</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enbale</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> code-server</span></span></code></pre></div></li><li><p>查看日志命令：</p><ul><li><code>systemctl status your-service</code></li><li><code>journalctl -u code-server.service</code></li></ul></li><li><p>访问方式</p><p>直接输入公网ip:port即可访问</p></li></ol><h2 id="本地vscode直接访问服务器" tabindex="-1">本地vscode直接访问服务器 <a class="header-anchor" href="#本地vscode直接访问服务器" aria-label="Permalink to &quot;本地vscode直接访问服务器&quot;">​</a></h2><p>下载remote-ssh插件即可</p><h2 id="安装redis" tabindex="-1">安装redis <a class="header-anchor" href="#安装redis" aria-label="Permalink to &quot;安装redis&quot;">​</a></h2><p><strong>Use</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">redis-cli</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 查看版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 启动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 停止</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -aux</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 查看redis进程</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 不常用命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 查看服务状态</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 启动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 停止</span></span></code></pre></div><h2 id="安装alist" tabindex="-1">安装Alist <a class="header-anchor" href="#安装alist" aria-label="Permalink to &quot;安装Alist&quot;">​</a></h2><p>通过alist可以管理各个云盘的资源</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 一键安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://alist.nn.ci/v3.sh&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 更新</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://alist.nn.ci/v3.sh&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#卸载</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://alist.nn.ci/v3.sh&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span></span></code></pre></div><p>Alist 安装成功之后：</p><p>访问地址：http://YOUR_IP:5244/</p><p>配置文件路径：/opt/alist/data/config.json $查看管理员信息，请执行</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/alist</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./alist</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> admin</span></span></code></pre></div><p><strong>常用功能</strong></p><ul><li>查看状态：systemctl status alist</li><li>启动服务：systemctl start alist</li><li>重启服务：systemctl restart alist</li><li>停止服务：systemctl stop alist</li></ul><h3 id="配置阿里云盘订阅" tabindex="-1">配置阿里云盘订阅 <a class="header-anchor" href="#配置阿里云盘订阅" aria-label="Permalink to &quot;配置阿里云盘订阅&quot;">​</a></h3><div class="language-dockerfile vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">version: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;3&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">services:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  aliyun-subscribe:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    container_name: aliyunsub</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    image: looby/aliyundrive-subscribe:latest</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    restart: always</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ports: </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - 8002:8002</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    volumes:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - /root/conf/:/app/conf</span></span></code></pre></div><p>下载：<a href="https://github.com/adminpass/aliyundrive-subscribe/releases" target="_blank" rel="noreferrer">https://github.com/adminpass/aliyundrive-subscribe/releases</a></p><p>需要将amd64/arm64以及app.ini文件都下载到/root/conf文件内</p>`,96)])])}const C=i(e,[["render",k]]);export{y as __pageData,C as default};
