import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.Dpoz9nJ7.js";const l="/assets/rn-01_react-native-01.C6Iotgf6.png",n="/assets/rn-01_react-native-02.BvoWjZp1.png",h="/assets/rn-01_react-native-03.DEG4aB7X.png",y=JSON.parse('{"title":"RN-01 react-native","description":"","frontmatter":{},"headers":[],"relativePath":"src/前端/react-native/rn-01 react-native.md","filePath":"src/前端/react-native/rn-01 react-native.md","lastUpdated":1710326451000}'),p={name:"src/前端/react-native/rn-01 react-native.md"};function k(r,s,d,o,c,g){return t(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="rn-01-react-native" tabindex="-1">RN-01 react-native <a class="header-anchor" href="#rn-01-react-native" aria-label="Permalink to &quot;RN-01 react-native&quot;">​</a></h1><h2 id="一、react-native开始工作" tabindex="-1">一、react-native开始工作 <a class="header-anchor" href="#一、react-native开始工作" aria-label="Permalink to &quot;一、react-native开始工作&quot;">​</a></h2><ol><li>在vscode里面进入设置，开启exspanion，使用时，输入单词，之后再按一下tab键，该方法支持所有html支持的方法；比如：view*3；</li><li>在vscode里安装Babel ES6/ES7</li></ol><h2 id="二、在react-native中使用标签需要引入" tabindex="-1">二、在react-native中使用标签需要引入 <a class="header-anchor" href="#二、在react-native中使用标签需要引入" aria-label="Permalink to &quot;二、在react-native中使用标签需要引入&quot;">​</a></h2><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> React </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;react&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {View,Text} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;react-native&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> App</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> React</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    render</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">View</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">View</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>在模板中导出有三种模式</p><p>（1）<code>export default class</code> 直接导出一个类</p><p>（2）<code>export default App</code>；</p><p>（3）<code>modules.exports = App</code>；</p><h2 id="三、react-native中的行间样式" tabindex="-1">三、react-native中的行间样式 <a class="header-anchor" href="#三、react-native中的行间样式" aria-label="Permalink to &quot;三、react-native中的行间样式&quot;">​</a></h2><ol><li>引入：</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {StyleSheet} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;react-native&#39;</span></span></code></pre></div><ol start="2"><li>创建一个变量</li></ol><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> styles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> StyleSheet.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    colors:{color:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;red&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,width:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用时: </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{styles.colors}&gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ol start="3"><li>多个第行间样式，使用数组的形式；</li></ol><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">View</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{[styles.box,styles.box1]}&gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">View</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ol start="4"><li>在react-native中，默认是flex布局，默认方向是纵向的，可以直接使用flex布局；</li></ol><p>给元素设置flex:1，则默认占满剩余空间，如果是根节点，则是整个屏幕，可以给根节点设置flex:1，之后设置背景，则是整个屏幕的背景；</p><ol start="5"><li><p>在命名时组件使用大驼峰命名（首字母大写），变量命名小驼峰命名，在使用css样式时，不能使用中划线，需要使用驼峰命名</p></li><li><p>text有一个属性：numberOfLines={1}，指定显示多少行，超出则变点状；</p></li></ol><h2 id="四、注意事项" tabindex="-1">四、注意事项 <a class="header-anchor" href="#四、注意事项" aria-label="Permalink to &quot;四、注意事项&quot;">​</a></h2><ol><li>字符串内容必须放在text组件里，不能写在view里，flex不建议放在text组件上面；</li><li>如果给子元素设置flex属性时，那么它的父元素必须设置固定高度或者flex属性；</li></ol><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Header </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./header&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Header</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//内容不要包裹view标签,否则header标签里面即使设置flex:1也没有高度;</span></span></code></pre></div><h2 id="五、事件" tabindex="-1">五、事件 <a class="header-anchor" href="#五、事件" aria-label="Permalink to &quot;五、事件&quot;">​</a></h2><ol><li>传值；</li></ol><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Header</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{arr} /&gt;</span></span></code></pre></div><ol start="2"><li>点击事件</li></ol><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Header</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onPress</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;哈哈&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)}/&gt;</span></span></code></pre></div><ol start="3"><li>在react-native中，想查看数据有没有传送过来可以使用console.warn，没有log；</li></ol><h2 id="六、react-native中的css样式" tabindex="-1">六、react-native中的css样式 <a class="header-anchor" href="#六、react-native中的css样式" aria-label="Permalink to &quot;六、react-native中的css样式&quot;">​</a></h2><p>在react-native中使用行间样式；</p><ol><li>padding</li></ol><p>paddingHorizontal：同时设置paddingleft/right</p><p>paddingVertical：同时设置paddingtop/bottom;</p><ol start="2"><li><p>设置样式不需要添加px；</p></li><li><p>在给文字设置样式时，必须设置在text元素上；</p></li><li><p>使用图片：引入Image组件，src变成了soure，需要填写require； （1）加载本地：</p></li></ol><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Image</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> soure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{require(./img/1.png)}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>（2）加载网络：，必须设置宽高；</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">soure</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uri</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:图片地址}}</span></span></code></pre></div><ol start="5"><li><p>背景图组件：ImageBackground，设置图片地址和image组件一样，可以在组件里面填写Text组件；</p></li><li><p>ScrollView组件，滚动区域组件；内容是多高，则滚动区域有多高；</p></li></ol><p>注意：react-native中，内容超过屏幕宽度是不能滚动的，需要加入该组件；</p><h2 id="七、在运行react-native下载慢时-添加以下代码" tabindex="-1">七、在运行react native下载慢时，添加以下代码 <a class="header-anchor" href="#七、在运行react-native下载慢时-添加以下代码" aria-label="Permalink to &quot;七、在运行react native下载慢时，添加以下代码&quot;">​</a></h2><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">maven{ </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">url</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> &quot;http://maven.aliyun.com/nexus/content/groups/public/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div><p><img src="`+l+'" alt="image"></p><p><img src="'+n+'" alt="image"></p><p><img src="'+h+'" alt="image"></p>',44)])])}const v=i(p,[["render",k]]);export{y as __pageData,v as default};
