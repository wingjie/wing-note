import{_ as i,c as a,o as e,ag as l}from"./chunks/framework.Dpoz9nJ7.js";const p="/assets/html-14_flex%E3%80%81grid%E3%80%81table-01.ChcR-dN2.png",n="/assets/html-14_flex%E3%80%81grid%E3%80%81table-02.DEViywzz.png",E=JSON.parse('{"title":"html-14 flex、grid、table","description":"","frontmatter":{},"headers":[],"relativePath":"src/前端/html5/html-14 flex、grid、table.md","filePath":"src/前端/html5/html-14 flex、grid、table.md","lastUpdated":1710326451000}'),t={name:"src/前端/html5/html-14 flex、grid、table.md"};function h(d,s,k,o,r,c){return e(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="html-14-flex、grid、table" tabindex="-1">html-14 flex、grid、table <a class="header-anchor" href="#html-14-flex、grid、table" aria-label="Permalink to &quot;html-14 flex、grid、table&quot;">​</a></h1><h2 id="一、css3多列布局" tabindex="-1">一、CSS3多列布局 <a class="header-anchor" href="#一、css3多列布局" aria-label="Permalink to &quot;一、CSS3多列布局&quot;">​</a></h2><p>可以创建多个列用来布局，就像报纸那样。</p><ol><li><code>columns</code> ：宽度，列数</li><li><code>column-count</code> 分割列数，后面写数字，默认为auto；</li><li><code>column-width</code> 分割每列的宽度；</li><li><code>column-gap</code> 每列之间的间隔；</li><li><code>column-rule</code> 设置列之间的分割线的宽度、样式和颜色（值和border值的写法一样）</li><li><code>column-span:1/all</code> 跨所有栏；</li></ol><h2 id="二、旧版弹性盒子" tabindex="-1">二、旧版弹性盒子 <a class="header-anchor" href="#二、旧版弹性盒子" aria-label="Permalink to &quot;二、旧版弹性盒子&quot;">​</a></h2><h3 id="容器属性" tabindex="-1">容器属性 <a class="header-anchor" href="#容器属性" aria-label="Permalink to &quot;容器属性&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">display: -webkit-box;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">display: -moz-box;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">display: -o-box;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">display: -ms-box;</span></span></code></pre></div><p>项目从左到右排列，项目不设置宽度的话，宽度由内容撑开，项目不设置高度的话，高度和容器一样。</p><h3 id="项目盒子内容主轴方向" tabindex="-1">项目盒子内容主轴方向 <a class="header-anchor" href="#项目盒子内容主轴方向" aria-label="Permalink to &quot;项目盒子内容主轴方向&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-webkit-box-orient: horizontal;     //项目从左到右；</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-webkit-box-orient: vertical;         //项目从上到下；</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-webkit-box-direction: reverse;     //设置元素反向排列</span></span></code></pre></div><h3 id="pack对齐方式" tabindex="-1">pack对齐方式 <a class="header-anchor" href="#pack对齐方式" aria-label="Permalink to &quot;pack对齐方式&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-webkit-box-pack: start /end/ </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /justify;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-webkit-box-orient: horizontal;     </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-webkit-box-pack: start; //左边开始     </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-webkit-box-pack: end; //右边到结束     </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-webkit-box-pack: center; //居中排序     </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-webkit-box-pack: justify; //项目两端对齐，内容相等</span></span></code></pre></div><h3 id="align对齐方式-交叉对齐" tabindex="-1">align对齐方式（交叉对齐） <a class="header-anchor" href="#align对齐方式-交叉对齐" aria-label="Permalink to &quot;align对齐方式（交叉对齐）&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-webkit-box-align: start /end/ center;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-webkit-box-orient: horizontal;     //从左到右</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-webkit-box-pack: justify;             //两端对齐</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-webkit-box-align: center;     //竖轴居中对齐</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-webkit-box-align: end;         //盒子底部对齐</span></span></code></pre></div><h3 id="项目属性" tabindex="-1">项目属性 <a class="header-anchor" href="#项目属性" aria-label="Permalink to &quot;项目属性&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-webkit-box-flex: 分配份数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-webkit-box-ordinal-group：排列到第几个</span></span></code></pre></div><h2 id="三、新版弹性盒子" tabindex="-1">三、新版弹性盒子 <a class="header-anchor" href="#三、新版弹性盒子" aria-label="Permalink to &quot;三、新版弹性盒子&quot;">​</a></h2><p><img src="https://notecdn.hrhe.cn/images/image-20200803112513487.png" alt="image-20200803112513487"></p><p>弹性盒子的定义</p><p>引入弹性盒布局模型的目的是提供一种更加有效的方式来对一个容器中的子元素进行排列、对齐和分配空白空间。弹性盒子是 CSS3 的一种新的布局模式。设置弹性盒子内联元素回车之后空格也解决，也不用浮动了。</p><ul><li>设置给大盒子设置属性：</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">display: flex;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 设置弹性盒子（块元素） */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">display: </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">inline-flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 设置弹性盒子（内联块） */</span></span></code></pre></div><ul><li><p>设置主轴的方向 <code>flex-direction</code></p><ul><li><p><code>row</code>（默认值）：水平方向左侧开始排列。</p></li><li><p><code>row-reverse</code>：水平方向右侧开始排列。</p></li><li><p><code>column</code>：垂直方向开始排列。</p></li><li><p><code>column-reverse</code>：垂直方向倒列。</p></li></ul></li></ul><h3 id="内容在主轴上的对齐方式" tabindex="-1">内容在主轴上的对齐方式 <a class="header-anchor" href="#内容在主轴上的对齐方式" aria-label="Permalink to &quot;内容在主轴上的对齐方式&quot;">​</a></h3><p><code>justify-content</code></p><p>当主轴为水平方向：内容在水平方向上对齐；</p><p>当主轴为垂直方向：内容在垂直方向上对齐，不能左右移动；</p><p>当主轴为垂直方向没有设置高度时，无法对齐；</p><ul><li><p><code>flex-start</code>（默认值）：左对齐；</p></li><li><p><code>flex-end</code>：右对齐；</p></li><li><p><code>center</code>： 居中；</p></li><li><p><code>space-between</code>：每个项目两侧的间隔相等；项目之间的间隔比项目与容器边框间隔大一倍；</p></li><li><p><code>space-around</code>：项目两段间隔相等；</p></li><li><p><code>space-evenly</code>: 项目与项目、项目与容器边框间隔相等；</p></li></ul><h3 id="项目与起点交叉对齐" tabindex="-1">项目与起点交叉对齐 <a class="header-anchor" href="#项目与起点交叉对齐" aria-label="Permalink to &quot;项目与起点交叉对齐&quot;">​</a></h3><p><code>align-items </code></p><p>当主轴为水平方向时，调整的对齐方式在垂直方向对齐；</p><p>当主轴为垂直方向时，调整的对齐方式在水平方向对齐；</p><ul><li><p><code>flex-start</code>：交叉轴的起点对齐。</p></li><li><p><code>flex-end</code>：交叉轴的终点对齐。</p></li><li><p><code>center</code>：交叉轴居中对齐</p></li><li><p><code>baseline</code>：项目中第一行文字的基线对齐。</p></li><li><p><code>stretch</code>（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度</p></li></ul><h3 id="如果一条轴线排不下-如何换行" tabindex="-1">如果一条轴线排不下，如何换行 <a class="header-anchor" href="#如果一条轴线排不下-如何换行" aria-label="Permalink to &quot;如果一条轴线排不下，如何换行&quot;">​</a></h3><p><code>flex-wrap</code></p><ul><li><p><code>nowrap</code>：不换行</p></li><li><p><code>wrap</code>：换行；</p></li><li><p><code>wrap-reverse</code>：换行，第一行在下方；</p></li></ul><h3 id="项目多行的情况-如何排列-可以取消换行中间的空隙" tabindex="-1">项目多行的情况，如何排列（可以取消换行中间的空隙） <a class="header-anchor" href="#项目多行的情况-如何排列-可以取消换行中间的空隙" aria-label="Permalink to &quot;项目多行的情况，如何排列（可以取消换行中间的空隙）&quot;">​</a></h3><p><code>align-content</code>:</p><ul><li><p><code>flex-start</code> //两排从顶部开始排列</p></li><li><p><code>flex-end</code> //从底部结束排列</p></li><li><p><code>center</code> //从中心排列</p></li><li><p><code>space-between</code> //分别在两端对齐</p></li><li><p><code>space-around</code> //两端间隔相等</p></li></ul><h3 id="项目属性-1" tabindex="-1">项目属性 <a class="header-anchor" href="#项目属性-1" aria-label="Permalink to &quot;项目属性&quot;">​</a></h3><p><code>order</code>： 定义项目的排列顺序</p><p><code>flex-basis</code> 设置子元素的宽度，跟width、height一样设置：250px；</p><p><code>flex-grow</code> 默认值：0。项目根据盒子剩余空间放大，将占用没有被占用的空间；</p><p><code>flex-shrink</code> 定义项目的缩小比例，默认为1，</p><ul><li>0的话，就是项目的width是多少就是多少。</li><li>超出容器宽度时的收缩比例，自己的flex-shrink与flex-basis乘积除以每一项的flex-shrink*flex-basis乘积之和，最后再拿得到的比例系数与乘以超出的宽度，从而得到该项目要收缩的空间数量；</li><li>shrink定义项目缩小比例算法：</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>一共8个项目，每个项目宽度100,8个项目一共宽度是800</span></span>
<span class="line"><span>    容器是600,</span></span>
<span class="line"><span>    所以多了200</span></span>
<span class="line"><span>这200就需要分配到8个项目里面，</span></span>
<span class="line"><span>给第一个项目设置flex-shrink:2;</span></span>
<span class="line"><span>第2个到第8个项目都是flex-shrink:1;</span></span>
<span class="line"><span>2:1:1:1:1:1:1:1</span></span>
<span class="line"><span>    一共的权值：     2*200+1*200+1*200+1*200+1*200+1*200+1*200+1*200=1800</span></span>
<span class="line"><span>    第一个项目：</span></span>
<span class="line"><span>        （2*200/1800）*200=44.44444</span></span>
<span class="line"><span>        100-44.44444=55.5555556</span></span>
<span class="line"><span>    第二个项目</span></span>
<span class="line"><span>        （1*200/1800）*200=22.222</span></span>
<span class="line"><span>        100-22.2222=77.77778</span></span></code></pre></div><ul><li><code>flex-shrink</code> 默认值：1。当项目占满盒子之后，选择的项目等比例缩小，其他则放大。</li><li><code>flex</code><ul><li>设置为1，占满剩余空间，设置<code>flex: 1</code>之后建议添加<code>overflow:hidden</code>属性，避免被挤出父元素的盒子</li><li>为flex-grow、flex-shrink、flex-basis的简写</li><li>项目分配的份数，可以是百分比，比如给项目设置：flex:20%；则会每排分5个；</li></ul></li></ul><h3 id="项目在交叉轴排列方式" tabindex="-1">项目在交叉轴排列方式 <a class="header-anchor" href="#项目在交叉轴排列方式" aria-label="Permalink to &quot;项目在交叉轴排列方式&quot;">​</a></h3><p><code>align-self</code>：默认为auto、继承父元素的align-items；</p><p><code>align-self</code>: auto/flex-start/flex-end/center/baseline/stretch</p><p>设置该属性将覆盖容器的align-items，如果需要向右对齐，可以设置</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flex: 1;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">text-align</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: right;</span></span></code></pre></div><h3 id="弹性盒子多列布局" tabindex="-1">弹性盒子多列布局 <a class="header-anchor" href="#弹性盒子多列布局" aria-label="Permalink to &quot;弹性盒子多列布局&quot;">​</a></h3><p>多列布局，如果不给子元素设置高度，则盒子高度等高；</p><ol><li>设置一个父元素，需要几个盒子，则设置几个盒子。</li><li>给父元素设置display:flex；</li><li>给左边的盒子设置宽度，设置高度。</li><li>给中间的盒子设置margin左右值，设置flex分等份。</li><li>给右边的盒子设置分等份。</li></ol><p>给子元素设置flex：份数，不需要跟单位。</p><h3 id="flex布局最后一个元素需要向右对齐的解决方法" tabindex="-1">flex布局最后一个元素需要向右对齐的解决方法： <a class="header-anchor" href="#flex布局最后一个元素需要向右对齐的解决方法" aria-label="Permalink to &quot;flex布局最后一个元素需要向右对齐的解决方法：&quot;">​</a></h3><p>（1）给倒数第二个元素设置<code>flex:1</code>;</p><p>（2）给最后一个元素设置<code>margin-left: auto</code>;</p><h2 id="四、grid二维网格布局" tabindex="-1">四、grid二维网格布局 <a class="header-anchor" href="#四、grid二维网格布局" aria-label="Permalink to &quot;四、grid二维网格布局&quot;">​</a></h2><h3 id="设置父元素属性" tabindex="-1">设置父元素属性 <a class="header-anchor" href="#设置父元素属性" aria-label="Permalink to &quot;设置父元素属性&quot;">​</a></h3><p><strong>块级grid</strong>：<code>display:grid</code>；</p><p><strong>行内块grid</strong>：<code>display: inline-grid</code>；</p><p>由于可以设置行列的关系，设置了grid的父元素，其子元素会默认按列排列，并且仅对其直接子元素生效，孙子那辈没作用；</p><p>注意：设置网格布局以后，子元素的float、display:inline-block，display:table-cell、vertical-align都将失效；</p><p><strong>单元格</strong>：行*列的单元格；3行3列会生产9格；</p><p><strong>网格线</strong>：行或列+1的网格线；</p><h3 id="设置行列" tabindex="-1">设置行列 <a class="header-anchor" href="#设置行列" aria-label="Permalink to &quot;设置行列&quot;">​</a></h3><p>设置行：<code>grid-template-rows；</code></p><p>设置列：<code>grid-template-columns</code>；</p><p>复合写法：<code>grid-template：rows / columns</code></p><p>使用单位：<code>1fr</code>、<code>%</code>、<code>px</code>、<code>rem</code>、<code>em</code>；<code>1fr</code>代表1行/列；</p><p>三行三列的布局，都是100宽高；</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    grid-template-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    grid-template-rows:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>设置行列的方法：</p><ul><li><p><code>repeat</code></p><p>重复次数：<code>grid-template-columns: repeat(3, 100px)；</code></p><p>重复模式：<code>grid-template-columns: repeat(2, 100px 20px 80px)</code>；(共六列)</p></li><li><p><code>auto-fill</code>或<code>auto-fit</code></p><p>用于不需要确定列数使用；</p><p><code>grid-template-columns: repeat(auto-fill, 100px)</code></p><p>以100px的宽度填充一行的列，如果占位则换行；响应式布局可以使用；</p></li><li><p><code>fr</code>单位</p><p><code>grid-template-columns: 100px 1fr 2fr</code>；第一列100px，第三列是第二列的2倍；</p></li><li><p><code>minmax()</code></p><p>表示一个范围（可以用于）</p><p><code>grid-template-columns: 1fr 1fr minmax(100px,1fr)</code> //不小于100px，不大于1fr；</p></li><li><p><code>auto</code><code>grid-template-columns: 100px auto 100px；</code></p></li><li><p>网格线的名称；</p><p>使用方括号指定每一根网络线的名字，方便以后的引用；</p><p><code>grid-template-columns: [c1] 100px [c2] 100px [c3] 100px [c4]</code>；3行+1为4根网络线；</p><p>同一根线多个名字：<code>[fifth-line row-5]</code>；</p></li></ul><h3 id="间隔" tabindex="-1">间隔 <a class="header-anchor" href="#间隔" aria-label="Permalink to &quot;间隔&quot;">​</a></h3><p>行间隔：<code>grid-row-gap</code></p><p>列间隔：<code>grid-column-gap</code></p><p>复合写法：grid-gap: 行 列 如果省略第二个值，则两个值相等；</p><p><code>grid-row-gap: 20px</code>;</p><p><code>grid-gap: 20px 20px</code>;</p><p>前缀已经删除，可以直接去掉前缀：row-gap、column-gap、gap；</p><p>规定区域：<code>grid-template-areas</code>：</p><h3 id="三行三列布局实例" tabindex="-1">三行三列布局实例 <a class="header-anchor" href="#三行三列布局实例" aria-label="Permalink to &quot;三行三列布局实例&quot;">​</a></h3><p><code>grid-template-areas: &#39;header header header&#39; &#39;main . slider&#39; &#39;footer footer footer&#39;</code></p><p>可以使用.点规定不需要使用的区域；</p><p>使用规定的区域：<code>gird-area：header</code>；等于规定的区域名称；名称不加引号；</p><p>注意：区域命名会影响到网络线，起始网格线：区域名-start，终止：区域名-end；</p><h3 id="规定单元格内容顺序" tabindex="-1">规定单元格内容顺序 <a class="header-anchor" href="#规定单元格内容顺序" aria-label="Permalink to &quot;规定单元格内容顺序&quot;">​</a></h3><p>水平位置：<code>justiy-items</code>: start | end | center | stretch(默认值)</p><p>垂直位置：<code>align-items:</code> 参上</p><p>复合写法：<code>place-items</code>: align justify 如果省略第二个值，则两个值相等；</p><h3 id="整个内容在容器里的位置" tabindex="-1">整个内容在容器里的位置 <a class="header-anchor" href="#整个内容在容器里的位置" aria-label="Permalink to &quot;整个内容在容器里的位置&quot;">​</a></h3><p>水平位置：<code>justify-content</code>: start | end | center | stretch | space-around | space-between | space-evenly</p><p>垂直位置：<code>align-content</code>：参上</p><p>复合写法：<code>place-content</code>: align justify 如果省略第二个值，则两个值相等；</p><ul><li><p><code>space-around</code> 每个项目两侧的间隔相等；项目之间的间隔比项目与容器边框间隔大一倍；</p></li><li><p><code>space-between</code> 项目与项目间隔相等，项目两边贴边；</p></li><li><p><code>space-evenly</code> 项目与项目、项目与容器边框间隔相等；</p></li></ul><p>每个单元格是<code>items</code>，整个内容是<code>content</code>;</p><h3 id="规定排序方式" tabindex="-1">规定排序方式 <a class="header-anchor" href="#规定排序方式" aria-label="Permalink to &quot;规定排序方式&quot;">​</a></h3><p>先行后列：<code>grid-auto-flow: row；</code>（默认）</p><p>先列后行：<code>grid-auto-flow: column；</code></p><p>row、row dense、column、column dense；</p><p>理解：横向的1-9变为纵向的1-9；</p><h3 id="规定多余行列的宽高" tabindex="-1">规定多余行列的宽高； <a class="header-anchor" href="#规定多余行列的宽高" aria-label="Permalink to &quot;规定多余行列的宽高；&quot;">​</a></h3><p><code>grid-auto-columns/rows</code></p><p>当规定3行3列时，如果有第4行，浏览器会根据单元格内容的大小，决定新增网格的列宽和行高；</p><p>grid-auto-columns:50px 规定新增的高度为50px；</p><p>grid；</p><p>grid属性：grid-template-columns/rows/areas grid-auto-rows/columns/flow 六个属性的简写；</p><p>不建议使用这个属性；</p><h3 id="项目属性-2" tabindex="-1">项目属性 <a class="header-anchor" href="#项目属性-2" aria-label="Permalink to &quot;项目属性&quot;">​</a></h3><h4 id="跨越" tabindex="-1">跨越 <a class="header-anchor" href="#跨越" aria-label="Permalink to &quot;跨越&quot;">​</a></h4><p>垂直开始网格线：<code>grid-column-start</code>；</p><p>垂直结束网格线：<code>grid-column-end</code>；</p><p>复合写法：<code>grid-column</code>: start / end；</p><p>水平开始网格线：<code>grid-row-start</code>；</p><p>水平结束网格线：<code>grid-row-end</code>；</p><p>复合写法：<code>grid-row</code>: start / end；</p><p>整体复合写法：<code>grid-area</code>: row-start / column-start / row-end / column-end</p><p>这样也可以设定占用份数；也可以指定网格线的名字；</p><p>参数除了写数量，还可以写span，跨越多少个网格；</p><p>grid-column-start: span 2； 跨域2个列；（span不区分end还是start）</p><p>如果项目重叠，可以使用z-index指定重叠顺序；</p><p>grid-column: auto / span 2 // 向左跨越2列</p><h4 id="排列顺序" tabindex="-1">排列顺序 <a class="header-anchor" href="#排列顺序" aria-label="Permalink to &quot;排列顺序&quot;">​</a></h4><p>水平位置：<code>justify-self</code>: start | end | center | stretch</p><p>垂直位置：<code>align-self</code>: 参上</p><p>复合写法：<code>place-self</code>： align justify 省略则相等；</p><h2 id="五、表格布局ie8" tabindex="-1">五、表格布局IE8+ <a class="header-anchor" href="#五、表格布局ie8" aria-label="Permalink to &quot;五、表格布局IE8+&quot;">​</a></h2><p>使用<code>display: table</code>；将内部元素使用table表格的特性；</p><p><code>display: table-cell</code>；给包裹元素设置；</p><p><img src="`+p+'" alt="image"></p><p>一般用于这种布局；设置了table-cell之后，需要设置vertical:属性；</p><p><img src="'+n+`" alt="image"></p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;left&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;logo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;right&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;哈哈哈哈哈哈哈哈&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> black</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">table-cell</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  vertical-align</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.logo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> black</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.right</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  margin-left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,138)])])}const y=i(t,[["render",h]]);export{E as __pageData,y as default};
